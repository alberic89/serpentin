# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  schedule:
    - cron: '45 5 * * *'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Cache apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: language-pack-fr imagemagick
      - name: Remove unused YAML
        run: rm *.yaml
      - name: Get input file
        uses: joutvhu/write-file@v1.0.2
        with:
          path: classe.yaml
          contents: ${{ secrets.CLASSE }}
          write_mode: overwrite
          encoding: base64
      - name: Build
        run: |
          export LC_ALL="fr_FR.UTF-8"
          export LC_CTYPE="fr_FR.UTF-8"
          sudo dpkg-reconfigure locales
          pip3 install -U tabulate
          pip3 install python-slugify pillow
          python3 serpentin.py
          mkdir github_page
          mogrify -resize 80% -monochrome -quality 100 *.png
          mv *.png github_page/serpentin.png
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'github_page'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
